type Cliente {
        id: ID
        nombre: String
        apellido: String
        empresa: String
        edad: Int
        tipo: TipoCliente
        emails: [Email]
    }
    type ClienteTotal
    {
        total: Float
        cliente : [Cliente]
    }
    type Pedido
    {
        id: ID
        pedido: [PedidoProducto]
        total: Int
        fecha: String
        cliente: ID
        estado: Estado
    }
    type PedidoProducto {
        id: ID
        cantidad: Int
    }
    type Producto
    {
        id: ID
        nombre: String
        precio: Int
        stock: Int
    }
    type Email
    {
        email: String
    }
    type Query
    {
        getClientes (limit: Int, offset: Int): [Cliente]
        getCliente(id: ID) : Cliente
        totalClientes : String
        getProductos (limit: Int, offset: Int, stock: Boolean) : [Producto]
        getProducto(id: ID) : Producto
        totalProductos : String
        getPedidos (cliente: String) : [Pedido]
        getPedido(id: ID) : Pedido
        TopClientes : [ClienteTotal]
    }
    enum TipoCliente
    {
        BASICO
        PREMIUM
    }
    enum Estado 
    {
        PENDIENTE
        CANCELADO
        COMPLETADO
    }
    input EmailInput
    {
        email: String
    }
    input PedidosInput
    {
        id: ID
        pedido: [PedidoProductoInput]
        total: Int!
        fecha: String
        cliente: ID
        estado: Estado
    }
    input ClienteInput
    {
        id: ID
        nombre: String!
        apellido: String!
        empresa: String!
        edad: Int!
        tipo: TipoCliente!
        emails: [EmailInput]
    }
    input ProductoInput
    {
        id: ID
        nombre: String!
        precio: Int!
        stock: Int!
    }
    input PedidoProductoInput 
    {
        id: ID
        cantidad: Int
    }
    """ Mutations para crear clientes, Productos """
    type Mutation {
        #Nombre delresolver, input con datos y valor que retorna
        crearCliente(input: ClienteInput): Cliente
        #Actualizar cliente
        updateCliente(input: ClienteInput) : Cliente
        deleteCliente(id: ID!) : String
        #Productos
        crearProducto(input: ProductoInput) : Producto
        updateProducto(input: ProductoInput) : Producto
        deleteProducto(id: ID!) : String
        #Pedidos
        nuevoPedido(input: PedidosInput) : Pedido
        updatePedido(input: PedidosInput) : String
        deletePedido(id: ID!) : String
    }